#!/bin/bash
# 패키지 설치

root_path=$(pwd)
kolla_git_path=$(pwd)/git
config_yaml_path=/etc/kolla
octavia_path=$(pwd)/octavia

function kolla_prepare
{

    # 기존 것 제거
    rm -rf $kolla_git_path
    rm -rf $config_yaml_path
    rm -rf $octavia_path
    
    # 설치에 필요한, 의존성 설치
    dnf install -y gcc git python3-libselinux libffi-devel openssl-devel openssl net-tools traceroute vim unzip
    # python
    python3 -m venv pyenv 
    . pyenv/bin/activate # 가상환경 활성화
    pip install -U pip # 활성화된 가상환경에서 pip 업그레이드
    
    # 파이썬 패키지 설치에 필요한 파일 다운 : Kolla, Kolla-ansible
    git clone https://opendev.org/openstack/kolla.git $kolla_git_path/kolla # git 에서 kolla 프로젝트 복사
    cd $kolla_git_path/kolla # 복사한 디렉터리 이동
    git checkout stable/2023.2 # git checkout {브랜치명} | branch master(기본) 가 아닌, stable/2023.2 (= bobcat ver)로 checkout 하면, 해당 브랜치가 관리하는 버전으로 파일이 전>부 변경됨
    cd $root_path
    
    git clone https://opendev.org/openstack/kolla-ansible.git $kolla_git_path/kolla-ansible # git 에서 Kolla-ansible 프로젝트 복사
    cd $kolla_git_path/kolla-ansible # 복사한 디렉터리 이동
    git checkout stable/2023.2 # bobcat 버전선택
    cd $root_path
    
    # 파이썬 패키지 설치
    pip install 'ansible-core>=2.14,<2.16' # ansible
    pip install $kolla_git_path/kolla
    pip install $kolla_git_path/kolla-ansible
    
    # Kolla-ansible 에 필요한 의존성 패키지 설치
    kolla-ansible install-deps
    
    # password.yml , global.yml 파일이 복사됨 -> /etc/kolla/
    cp -r ./pyenv/share/kolla-ansible/etc_examples/kolla /etc/.
    kolla-genpwd # /etc/kolla 의 password.yml 내용의 빈 패스워드를 채워줌
}

function octavia
{
    mkdir -p octavia
    cd octavia
    kolla-ansible octavia-certificates
    cd ..
}

function run
{
    kolla_prepare
    octavia
}

if [ -n "$1" ]; then
    "$1"
fi

