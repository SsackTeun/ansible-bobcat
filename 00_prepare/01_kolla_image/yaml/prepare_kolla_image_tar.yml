- hosts: localhost
  vars:
    save_path: ../../repository/kolla_image # tar 저장 위치
    registry_url: myregistry:5000 # TAG 명령어로 바꿀 registry url
    prefix: myregistry_5000_ # tar 파일 앞에 붙을 접두어
    tag: 2023.2-rocky-9 # TAG 명령어로 바꿀 tag 명(변경하지 않으려면 기존 이름 그대로 적어주기)
 
  tasks:
    - name: podman 설치
      ansible.builtin.dnf:
        name: podman
        state: latest

    # file 원본 텍스트 : docker.io/kolla/ovn-northd|2023.2-rocky-9
    - name: kolla 이미지 목록 읽기
      set_fact:
        images: "{{ lookup('file', 'kolla_image.list').splitlines() }}"

    # file 원본 텍스트 : docker.io/kolla/ovn-northd|2023.2-rocky-9
    # split 함수 | 기준으로 자른 결과의 첫번째 : item.split('|')[0] -> docker.io/kolla/ovn-northd
    # split 함수 | 기준으로 자른 결과의 두번째 : item.split('|')[1] -> 2023.2-rocky-9
    - name: 이미지 목록에서 name | tag 분리
      set_fact:
        images_info: "{{ images_info | default([]) + [{'name': item.split('|')[0], 'tag': item.split('|')[1]}] }}"
      loop: "{{ images }}"

    - name: kolla 이미지 다운로드
      containers.podman.podman_image:
        name: "{{ item.name }}"
        tag: "{{ item.tag }}"
      loop: "{{ images_info }}"

    - name: 태그
      containers.podman.podman_tag:
        image: "{{ item.name }}:{{ item.tag }}"
        target_names: "{{ registry_url }}/{{ item.name.split('/')[-1] }}:2023.2-rocky-9"
      loop: "{{ images_info }}"
    
    # 저장할 폴더 생성
    - name: tar 저장 폴더 생성
      ansible.builtin.file:
        path: "{{ save_path }}"
        state: directory
        mode: '0755'
    
    # Tar 파일 존재 확인
    - name: Tar 파일 존재 확인
      ansible.builtin.stat:
        path: "{{ save_path }}/{{ prefix }}{{ item.name.split('/')[-1]  }}.tar"
      register: result
      loop: "{{ images_info }}"

    - name: Debug stat results
      debug:
        msg: "File exists: {{ item.stat.exists }}, Path: {{ item.invocation.module_args.path }}"
      loop: "{{ result.results }}"

    # 받은 이미지를 tar 로 저장
    - name: kolla 이미지 tar 저장
      containers.podman.podman_save:
        image: "{{ registry_url }}/{{ item.0.name.split('/')[-1] }}:2023.2-rocky-9"
        dest: "{{ save_path }}/{{ prefix }}{{ item.0.name.split('/')[-1] }}.tar"
      loop: "{{ images_info | zip(result.results) | list }}"
      when: not item.1.stat.exists

    # pull image 모두 삭제
    - name: delete images
      ansible.builtin.shell:
        cmd: "podman rmi $(podman images -q) -f"


    
